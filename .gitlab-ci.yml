stages:
  - test
  - test-gpu
  - build

variables:
  PIP_CACHE_DIR: "$CI_PROJECT_DIR/.cache/pip"

cache:
  paths:
    - .cache/pip
    - .venv/

# Standard CPU tests (runs on shared runners)
test-cpu:
  stage: test
  image: python:3.11
  before_script:
    - apt-get update -qq && apt-get install -y -qq tesseract-ocr
    - pip install uv
    - uv sync --group dev
  script:
    - uv run pytest tests/ -v --ignore=tests/gpu/
  coverage: '/TOTAL.*\s+(\d+%)$/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
    paths:
      - htmlcov/
    expire_in: 1 week

# GPU tests (runs on self-hosted GPU runner)
test-gpu:
  stage: test-gpu
  tags:
    - gpu
    - cuda
    - nvidia
  image: nvidia/cuda:12.3-devel-ubuntu22.04
  before_script:
    - apt-get update -qq
    - apt-get install -y -qq python3 python3-pip tesseract-ocr git
    - pip3 install uv
    - uv sync --group dev
  script:
    - nvidia-smi  # Verify GPU access
    - uv run python -c "import cupy; print('CuPy CUDA available:', cupy.cuda.is_available())"
    - uv run pytest tests/gpu/ -v  # GPU-specific tests
  rules:
    - if: $CI_COMMIT_BRANCH == "main"
    - if: $CI_MERGE_REQUEST_IID
    - when: manual  # Allow manual trigger for other branches
  allow_failure: true  # Don't fail pipeline if GPU unavailable

# Build artifacts
build:
  stage: build
  image: python:3.11
  before_script:
    - pip install uv
  script:
    - uv build
  artifacts:
    paths:
      - dist/
    expire_in: 1 week
  only:
    - main
    - tags
